root: true

parser: babel-eslint

extends: eslint:recommended
plugins: [react]

env:
  browser: true
  es6: true
  mocha: true
  node: true

ecmaFeatures:
  jsx: true
  modules: true

globals:
  MockFirebase: true
  sinon: true

rules:
  camelcase: 2
  comma-spacing: 2
  consistent-return: 2
  dot-notation: [2, {allowKeywords: true}]
  eol-last: 2
  eqeqeq: 2
  jsx-quotes: 1
  new-cap: 2
  new-parens: 2
  no-alert: 2
  no-caller: 2
  no-catch-shadow: 2
  no-class-assign: 2
  no-const-assign: 2
  no-eval: 2
  no-extra-bind: 2
  no-extend-native: 2
  no-implied-eval: 2
  no-invalid-this: 2
  no-lone-blocks: 2
  no-lonely-if: 2
  no-multi-str: 2
  no-native-reassign: 2
  no-new-func: 2
  no-new-object: 2
  no-shadow: 0
  no-shadow-restricted-names: 2
  no-spaced-func: 2
  no-trailing-spaces: 2
  no-unused-expressions: 2
  no-with: 2
  quotes: [1, single]
  react/display-name: 0
  react/jsx-boolean-value: 1
  react/jsx-curly-spacing: 1
  react/jsx-max-props-per-line: 0
  react/jsx-no-duplicate-props: 1
  react/jsx-no-undef: 1
  react/jsx-sort-prop-types: 1
  react/jsx-sort-props: 0
  react/jsx-uses-react: 1
  react/jsx-uses-vars: 1
  react/no-danger: 1
  react/no-did-mount-set-state: 1
  react/no-did-update-set-state: 1
  react/no-multi-comp: 1
  react/no-unknown-property: 1
  react/prop-types: 1
  react/react-in-jsx-scope: 1
  react/require-extension: 1
  react/self-closing-comp: 1
  react/sort-comp: [1, {
      order: [
        lifecycle,
        everything-else,
        render
      ],
      groups: {
        lifecycle: [
          displayName,
          propTypes,
          contextTypes,
          childContextTypes,
          mixins,
          statics,
          defaultProps,
          constructor,
          getDefaultProps,
          getInitialState,
          getChildContext,
          componentWillMount,
          componentDidMount,
          componentWillReceiveProps,
          shouldComponentUpdate,
          componentWillUpdate,
          componentDidUpdate,
          componentWillUnmount
        ]
      }
    }]
  react/wrap-multilines: 1
  semi: 2
  semi-spacing: [2, {before: false, after: true}]
  space-infix-ops: 2
  space-return-throw-case: 2
  space-unary-ops: [2, {words: true, nonwords: false}]
  wrap-iife: 2
  yoda: [2, never]
